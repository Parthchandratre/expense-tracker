{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlfor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fea28c00.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <h2>\r\n      Expense Tracker\r\n    </h2>\r\n  )\r\n}","export default (state, action) => {\r\n  switch(action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\r\n      }\r\n      case 'ADD_TRANSACTION':\r\n        return {\r\n          ...state,\r\n          transactions:[action.payload, ...state.transactions]\r\n        }\r\n    default: \r\n      return state;\r\n  }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\n\r\n// Initial State\r\nconst initialState = {\r\n  transactions:  []\r\n}\r\n\r\n//Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    });\r\n  }\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    });\r\n\r\n  }\r\n  return (<GlobalContext.Provider value={{\r\n    transactions: state.transactions,\r\n    deleteTransaction,\r\n    addTransaction\r\n  }}>\r\n    {children}\r\n  </GlobalContext.Provider>);\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n\r\nexport const Balance = () => { \r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1 >Rs.{total}</h1>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n\r\n  const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n\r\n  return (\r\n    <div>\r\n       <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n  <p  className=\"money plus\">{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n  <p  className=\"money minus\">{expense}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"," import React, { useContext } from 'react';\r\n import { GlobalContext } from '../context/GlobalState';\r\n \r\n export const Transaction = ({ transaction }) => {\r\n   const { deleteTransaction } = useContext(GlobalContext);\r\n   \r\n  \r\n  const sign = transaction.amount < 0 ? '-' : '+';\r\n   return (\r\n   <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n     {transaction.text} <span>{sign}Rs.{Math.abs(transaction.amount)}</span><button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\r\n        </li>\r\n     \r\n   )\r\n }\r\n ","import React, { useContext }from 'react';\r\nimport { Transaction } from './Transaction'\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  \r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction}/>))}\r\n        \r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, {useState, useContext} from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] =useState('');\r\n  const [amount, setAmount] =useState('0');\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount\r\n    }\r\n\r\n    addTransaction (newTransaction);\r\n  }\r\n  return (\r\n    <div>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlfor=\"text\">Text</label>\r\n          <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)}  placeholder=\"Enter text...\" />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlfor=\"amount\"\r\n            >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n          >\r\n          <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header'; \nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    \n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}